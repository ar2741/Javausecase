import java.util.*;
import java.util.regex.*;

class Customer {
    private static int idCounter = 1000;
    private int customerId;
    private String name;
    private String email;
    private String contact;
    private String accountType;

    public Customer(String name, String email, String contact, String accountType) {
        this.customerId = generateId();
        this.name = name;
        this.email = email;
        this.contact = contact;
        this.accountType = accountType;
    }

    private static int generateId() {
        return ++idCounter;
    }

    public int getCustomerId() {
        return customerId;
    }

    public String getName() {
        return name;
    }

    public String getEmail() {
        return email;
    }

    public String getContact() {
        return contact;
    }

    public String getAccountType() {
        return accountType;
    }

    @Override
    public String toString() {
        return "Customer Id = " + customerId +
               ", Customer name = " + name +
               ", Customer email = " + email +
               ", Customer contact = " + contact +
               ", Account type = " + accountType;
    }
}

public class BankCustomerManagementSystem {
    private static List<Customer> customers = new ArrayList<>();
    private static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\nWelcome to Standard Chartered Bank");
            System.out.println("Please enter your choice");
            System.out.println("1 for Add new Customer");
            System.out.println("2 for Display Customers");
            System.out.println("3 for Search Customer");
            System.out.println("4 for Delete Customer");
            System.out.println("5 for Exit the bank application");

            int choice = sc.nextInt();
            sc.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    addCustomer();
                    break;
                case 2:
                    displayCustomers();
                    break;
                case 3:
                    searchCustomer();
                    break;
                case 4:
                    deleteCustomer();
                    break;
                case 5:
                    System.out.println("Exiting application. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice! Please try again.");
            }
        }
    }

    private static void addCustomer() {
        System.out.println("Please enter customer details");

        System.out.print("Enter name: ");
        String name = sc.nextLine();
        if (!name.matches("[a-zA-Z ]+")) {
            System.out.println("Invalid name! Name should only contain alphabets.");
            return;
        }

        System.out.print("Enter email: ");
        String email = sc.nextLine();
        if (!Pattern.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$", email)) {
            System.out.println("Invalid email format!");
            return;
        }

        System.out.print("Enter contact: ");
        String contact = sc.nextLine();
        if (!contact.matches("\\d{10}")) {
            System.out.println("Invalid contact! It should be exactly 10 digits.");
            return;
        }

        System.out.print("Enter account type (Savings or Current): ");
        String accountType = sc.nextLine();
        if (!(accountType.equalsIgnoreCase("Savings") || accountType.equalsIgnoreCase("Current"))) {
            System.out.println("Invalid account type! It should be either Savings or Current.");
            return;
        }

        Customer customer = new Customer(name, email, contact, accountType);
        customers.add(customer);
        System.out.println("Customer added successfully with customer id " + customer.getCustomerId());
    }

    private static void displayCustomers() {
        if (customers.isEmpty()) {
            System.out.println("No customers to display.");
            return;
        }
        for (Customer c : customers) {
            System.out.println(c);
        }
    }

    private static void searchCustomer() {
        System.out.print("Please enter customer id: ");
        int id = sc.nextInt();
        sc.nextLine();

        for (Customer c : customers) {
            if (c.getCustomerId() == id) {
                System.out.println(c);
                return;
            }
        }
        System.out.println("Customer not found.");
    }

    private static void deleteCustomer() {
        System.out.print("Please enter customer id to be deleted: ");
        int id = sc.nextInt();
        sc.nextLine();

        Iterator<Customer> iterator = customers.iterator();
        while (iterator.hasNext()) {
            Customer c = iterator.next();
            if (c.getCustomerId() == id) {
                iterator.remove();
                System.out.println("Deleted customer with id = " + id);
                return;
            }
        }
        System.out.println("Customer not found.");
    }
}
